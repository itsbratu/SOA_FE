version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ AMQP port
      - "15672:15672"  # RabbitMQ management console
    networks:
      - shop_network
    restart: always

  redis:
    image: redis
    container_name: redis_instance_1
    ports:
      - "6380:6379"  # Redis mapped to 6380 on host machine
    networks:
      - shop_network
    restart: always

  shop_logs_service:
    build: ./rabitmq_logs
    container_name: shop_logs_service
    depends_on:
      - rabbitmq
    networks:
      - shop_network
    restart: always

  redis-updater:
    build: ./redis_updater
    container_name: redis_updater
    environment:
      - REDIS_HOST=redis_instance_1  # Make sure this matches the name of the Redis container in Docker
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - shop_network
    restart: always

  auth-service:
    build: ./auth
    container_name: auth_service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
    networks:
      - shop_network
    depends_on:
      - rabbitmq
      - redis
    restart: always

  shops-service:
    build: ./api 
    container_name: shops_service
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis_instance_1  # Connect to Redis container using its name
    ports:
      - "3000:3000"  # Expose the Shops API on port 3000
    depends_on:
      - redis
      - rabbitmq
      - auth-service  # Shops API depends on Auth service
    networks:
      - shop_network
    restart: always

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - shop_network
    restart: always

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - shop_network
    restart: always

  notification-service:
    build: ./notifications_kafka 
    container_name: notification_service
    ports:
      - "3006:3006"
    environment:
      - KAFKA_BROKER=kafka:9092  # Update to match the Kafka service name
    depends_on:
      - kafka
    networks:
      - shop_network
    restart: always

networks:
  shop_network:
    driver: bridge
